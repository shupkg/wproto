{{- /*gotype: github.com/shupkg/wproto/gen.File*/ -}}
// Code generated by wproto. DO NOT EDIT.
// source: {{ .Path }}

{{- $f := . }}

{{- range $e := .Enums }}
{{ $e.Comment.PrintLeading "//" -}}
export enum {{ $e.Name }} {
    {{- range $e.Fields }}
    {{ .Comment.PrintLeading "//" -}}
    {{ .Name }} = "{{ .Value }}", {{ .Comment.PrintTrailing "//" }} //{{ .Index }}
    {{- end }}
}
{{- end }}

{{- range .Messages }}
{{ .Comment.PrintLeading "//" -}}
export type {{ .Name }} = {
    {{- range .Fields }}
    {{ .Comment.PrintLeading "//" -}}
    {{ .Name }}:{{ .JSFieldType }}; {{ .Comment.PrintTrailing "//" }}
    {{- end }}
}
{{- end }}

{{- if .Services }}
type Fetch = <T>(url: string, param: any) => Promise<T>;
{{- end }}

{{- range .Services }}
{{ .Comment.PrintLeading "//" -}}
export class {{ .Name }}Client {
    private readonly base: string;
    private readonly fetch: Fetch;

    constructor(serverUrl: string, fetch: Fetch) {
        this.fetch = fetch;
        this.base = serverUrl + "/{{ $f.ApiPrefix }}/{{ $f.LowerName .Name }}";
    }

    {{- range .Methods }}
    {{ .Comment.PrintLeading "//" -}}
    {{ .Name }}(input: {{ .Input }}): Promise<{{ .Output }}> {
        return this.fetch<{{ .Output }}>(this.base + "/{{ $f.LowerName .Name }}", input);
    }
    {{- end }}
}
{{- end }}
